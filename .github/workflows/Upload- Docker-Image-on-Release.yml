name: Upload Docker Image on Release

on:
  release:
    types: [created]

jobs:

  build:
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Check out the repository
        uses: actions/checkout@v4

      # Step 2: Log in to Docker Hub (or other registry)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build the Docker image
      - name: Build Docker image
        run: docker build --file Dockerfile --tag ${{ vars.REPO_NAME }}-${{ github.event.release.name }}:latest .

      # Step 4: Tag the Docker image with the repository name and version
      - name: Tag Docker image
        run: |
          docker tag ${{ vars.REPO_NAME }}-${{ github.event.release.name }}:latest ${{ secrets.DOCKER_USERNAME }}/${{ vars.REPO_NAME }}:latest
          docker tag ${{ vars.REPO_NAME }}-${{ github.event.release.name }}:latest ${{ secrets.DOCKER_USERNAME }}/${{ vars.REPO_NAME }}:${{ github.event.release.name }}

      # Step 5: Push the Docker image to the repository
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ vars.REPO_NAME }}:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ vars.REPO_NAME }}:${{ github.event.release.name }}

      # Step 6: Save Docker image as a tarball
      - name: Save Docker image as tarball
        run: docker save ${{ vars.REPO_NAME }}-${{ github.event.release.name }}:latest -o ${{ vars.REPO_NAME }}-${{ github.event.release.name }}.tar

      # Step 7: Upload Docker image tarball to release
      - name: Upload Docker image to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ vars.REPO_NAME }}-${{ github.event.release.name }}.tar
          asset_name: ${{ vars.REPO_NAME }}-${{ github.event.release.name }}.tar
          asset_content_type: application/x-tar
